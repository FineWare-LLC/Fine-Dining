import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
type Documents = {
    "mutation CreateUser($input: CreateUserInput!) {\n  createUser(input: $input) {\n    id\n    name\n    email\n    role\n    accountStatus\n  }\n}\n\nmutation UpdateUser($id: ID!, $input: UpdateUserInput!) {\n  updateUser(id: $id, input: $input) {\n    id\n    name\n    email\n    role\n    accountStatus\n    dailyCalories\n    weight\n    height\n  }\n}\n\nmutation DeleteUser($id: ID!) {\n  deleteUser(id: $id)\n}\n\nmutation LoginUser($email: String!, $password: String!) {\n  loginUser(email: $email, password: $password) {\n    token\n    user {\n      id\n      name\n      email\n      role\n    }\n  }\n}\n\nmutation RequestPasswordReset($email: String!) {\n  requestPasswordReset(email: $email)\n}\n\nmutation ResetPassword($resetToken: String!, $newPassword: String!) {\n  resetPassword(resetToken: $resetToken, newPassword: $newPassword)\n}\n\nmutation CreateRecipe($recipeName: String!, $ingredients: [String]!, $instructions: String!, $prepTime: Int!, $difficulty: Difficulty, $nutritionFacts: String, $tags: [String], $images: [String], $estimatedCost: Float, $authorId: ID) {\n  createRecipe(\n    recipeName: $recipeName\n    ingredients: $ingredients\n    instructions: $instructions\n    prepTime: $prepTime\n    difficulty: $difficulty\n    nutritionFacts: $nutritionFacts\n    tags: $tags\n    images: $images\n    estimatedCost: $estimatedCost\n    authorId: $authorId\n  ) {\n    id\n    recipeName\n    prepTime\n    difficulty\n    author {\n      id\n      name\n    }\n  }\n}\n\nmutation UpdateRecipe($id: ID!, $recipeName: String, $ingredients: [String], $instructions: String, $prepTime: Int, $difficulty: Difficulty, $nutritionFacts: String, $tags: [String], $images: [String], $estimatedCost: Float) {\n  updateRecipe(\n    id: $id\n    recipeName: $recipeName\n    ingredients: $ingredients\n    instructions: $instructions\n    prepTime: $prepTime\n    difficulty: $difficulty\n    nutritionFacts: $nutritionFacts\n    tags: $tags\n    images: $images\n    estimatedCost: $estimatedCost\n  ) {\n    id\n    recipeName\n    prepTime\n    difficulty\n    updatedAt\n  }\n}\n\nmutation DeleteRecipe($id: ID!) {\n  deleteRecipe(id: $id)\n}\n\nmutation CreateRestaurant($restaurantName: String!, $address: String!, $phone: String, $website: String, $cuisineType: [String], $priceRange: PriceRange) {\n  createRestaurant(\n    restaurantName: $restaurantName\n    address: $address\n    phone: $phone\n    website: $website\n    cuisineType: $cuisineType\n    priceRange: $priceRange\n  ) {\n    id\n    restaurantName\n    address\n  }\n}\n\nmutation UpdateRestaurant($id: ID!, $restaurantName: String, $address: String, $phone: String, $website: String, $cuisineType: [String], $priceRange: PriceRange) {\n  updateRestaurant(\n    id: $id\n    restaurantName: $restaurantName\n    address: $address\n    phone: $phone\n    website: $website\n    cuisineType: $cuisineType\n    priceRange: $priceRange\n  ) {\n    id\n    restaurantName\n    address\n    updatedAt\n  }\n}\n\nmutation DeleteRestaurant($id: ID!) {\n  deleteRestaurant(id: $id)\n}\n\nmutation CreateMealPlan($userId: ID!, $startDate: Date!, $endDate: Date!, $title: String, $status: MealPlanStatus, $totalCalories: Int) {\n  createMealPlan(\n    userId: $userId\n    startDate: $startDate\n    endDate: $endDate\n    title: $title\n    status: $status\n    totalCalories: $totalCalories\n  ) {\n    id\n    title\n    startDate\n    endDate\n    user {\n      id\n    }\n  }\n}\n\nmutation UpdateMealPlan($id: ID!, $startDate: Date, $endDate: Date, $title: String, $status: MealPlanStatus, $totalCalories: Int) {\n  updateMealPlan(\n    id: $id\n    startDate: $startDate\n    endDate: $endDate\n    title: $title\n    status: $status\n    totalCalories: $totalCalories\n  ) {\n    id\n    title\n    startDate\n    endDate\n    status\n    updatedAt\n  }\n}\n\nmutation DeleteMealPlan($id: ID!) {\n  deleteMealPlan(id: $id)\n}\n\nmutation CreateMeal($mealPlanId: ID!, $date: Date!, $mealType: MealType!, $recipeId: ID, $restaurantId: ID, $mealName: String, $price: Float, $ingredients: [String], $nutrition: NutritionInput, $allergens: [String], $nutritionFacts: String, $portionSize: String, $notes: String) {\n  createMeal(\n    mealPlanId: $mealPlanId\n    date: $date\n    mealType: $mealType\n    recipeId: $recipeId\n    restaurantId: $restaurantId\n    mealName: $mealName\n    price: $price\n    ingredients: $ingredients\n    nutrition: $nutrition\n    allergens: $allergens\n    nutritionFacts: $nutritionFacts\n    portionSize: $portionSize\n    notes: $notes\n  ) {\n    id\n    mealName\n    mealType\n    date\n    price\n    nutrition {\n      carbohydrates\n      protein\n      fat\n      sodium\n    }\n    allergens\n  }\n}\n\nmutation UpdateMeal($id: ID!, $date: Date, $mealType: MealType, $recipeId: ID, $restaurantId: ID, $mealName: String, $price: Float, $ingredients: [String], $nutrition: NutritionInput, $allergens: [String], $nutritionFacts: String, $portionSize: String, $notes: String) {\n  updateMeal(\n    id: $id\n    date: $date\n    mealType: $mealType\n    recipeId: $recipeId\n    restaurantId: $restaurantId\n    mealName: $mealName\n    price: $price\n    ingredients: $ingredients\n    nutrition: $nutrition\n    allergens: $allergens\n    nutritionFacts: $nutritionFacts\n    portionSize: $portionSize\n    notes: $notes\n  ) {\n    id\n    mealName\n    mealType\n    date\n    price\n    nutrition {\n      carbohydrates\n      protein\n      fat\n      sodium\n    }\n    allergens\n    updatedAt\n  }\n}\n\nmutation DeleteMeal($id: ID!) {\n  deleteMeal(id: $id)\n}\n\nmutation CreateStats($userId: ID!, $macros: String, $micros: String, $caloriesConsumed: Int, $waterIntake: Int, $steps: Int) {\n  createStats(\n    userId: $userId\n    macros: $macros\n    micros: $micros\n    caloriesConsumed: $caloriesConsumed\n    waterIntake: $waterIntake\n    steps: $steps\n  ) {\n    id\n    dateLogged\n    caloriesConsumed\n  }\n}\n\nmutation DeleteStats($id: ID!) {\n  deleteStats(id: $id)\n}\n\nmutation CreateReview($targetType: String!, $targetId: ID!, $rating: Int!, $comment: String) {\n  createReview(\n    targetType: $targetType\n    targetId: $targetId\n    rating: $rating\n    comment: $comment\n  ) {\n    id\n    rating\n    comment\n    targetType\n    targetId\n  }\n}\n\nmutation DeleteReview($id: ID!) {\n  deleteReview(id: $id)\n}\n\nquery GetUser($id: ID!) {\n  getUser(id: $id) {\n    id\n    name\n    email\n    role\n    accountStatus\n    weight\n    height\n    gender\n    measurementSystem\n    dailyCalories\n    createdAt\n  }\n}\n\nquery GetUsers($page: Int, $limit: Int) {\n  getUsers(page: $page, limit: $limit) {\n    id\n    name\n    email\n    role\n  }\n}\n\nquery SearchUsers($keyword: String!) {\n  searchUsers(keyword: $keyword) {\n    id\n    name\n    email\n  }\n}\n\nquery GetRecipe($id: ID!) {\n  getRecipe(id: $id) {\n    id\n    recipeName\n    ingredients\n    instructions\n    prepTime\n    difficulty\n    nutritionFacts\n    tags\n    images\n    estimatedCost\n    averageRating\n    ratingCount\n    author {\n      id\n      name\n    }\n  }\n}\n\nquery GetRecipes($page: Int, $limit: Int) {\n  getRecipes(page: $page, limit: $limit) {\n    id\n    recipeName\n    difficulty\n    averageRating\n    author {\n      id\n      name\n    }\n  }\n}\n\nquery SearchRecipes($keyword: String!) {\n  searchRecipes(keyword: $keyword) {\n    id\n    recipeName\n    difficulty\n  }\n}\n\nquery GetRestaurant($id: ID!) {\n  getRestaurant(id: $id) {\n    id\n    restaurantName\n    address\n    phone\n    website\n    cuisineType\n    priceRange\n    averageRating\n    ratingCount\n  }\n}\n\nquery GetRestaurants($page: Int, $limit: Int) {\n  getRestaurants(page: $page, limit: $limit) {\n    id\n    restaurantName\n    address\n    cuisineType\n    averageRating\n  }\n}\n\nquery SearchRestaurants($keyword: String!) {\n  searchRestaurants(keyword: $keyword) {\n    id\n    restaurantName\n    address\n  }\n}\n\nquery GetMealPlan($id: ID!) {\n  getMealPlan(id: $id) {\n    id\n    title\n    startDate\n    endDate\n    status\n    totalCalories\n    user {\n      id\n      name\n    }\n    meals {\n      id\n      mealName\n      mealType\n      date\n      price\n      nutrition {\n        carbohydrates\n        protein\n        fat\n        sodium\n      }\n      allergens\n    }\n  }\n}\n\nquery GetMealPlans($userId: ID, $page: Int, $limit: Int) {\n  getMealPlans(userId: $userId, page: $page, limit: $limit) {\n    id\n    title\n    startDate\n    endDate\n    status\n    user {\n      id\n    }\n  }\n}\n\nquery GetStatsByUser($userId: ID!) {\n  getStatsByUser(userId: $userId) {\n    id\n    dateLogged\n    macros\n    micros\n    caloriesConsumed\n    waterIntake\n    steps\n  }\n}\n\nquery GetReview($id: ID!) {\n  getReview(id: $id) {\n    id\n    rating\n    comment\n    targetType\n    targetId\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}\n\nquery GetReviewsForTarget($targetType: String!, $targetId: ID!) {\n  getReviewsForTarget(targetType: $targetType, targetId: $targetId) {\n    id\n    rating\n    comment\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}\n\nquery FindNearbyRestaurants($latitude: Float!, $longitude: Float!, $radius: Int, $keyword: String) {\n  findNearbyRestaurants(\n    latitude: $latitude\n    longitude: $longitude\n    radius: $radius\n    keyword: $keyword\n  ) {\n    placeId\n    name\n    vicinity\n    rating\n    userRatingsTotal\n    location {\n      latitude\n      longitude\n    }\n  }\n}\n\nquery Ping {\n  ping\n}\n\nmutation GenerateOptimizedMealPlan {\n  generateOptimizedMealPlan {\n    meals {\n      mealId\n      mealName\n      servings\n      pricePerServing\n      totalPrice\n      nutrition {\n        carbohydrates\n        protein\n        fat\n        sodium\n      }\n    }\n    totalCost\n    totalNutrition {\n      carbohydrates\n      protein\n      fat\n      sodium\n    }\n  }\n}": typeof types.CreateUserDocument,
};
const documents: Documents = {
    "mutation CreateUser($input: CreateUserInput!) {\n  createUser(input: $input) {\n    id\n    name\n    email\n    role\n    accountStatus\n  }\n}\n\nmutation UpdateUser($id: ID!, $input: UpdateUserInput!) {\n  updateUser(id: $id, input: $input) {\n    id\n    name\n    email\n    role\n    accountStatus\n    dailyCalories\n    weight\n    height\n  }\n}\n\nmutation DeleteUser($id: ID!) {\n  deleteUser(id: $id)\n}\n\nmutation LoginUser($email: String!, $password: String!) {\n  loginUser(email: $email, password: $password) {\n    token\n    user {\n      id\n      name\n      email\n      role\n    }\n  }\n}\n\nmutation RequestPasswordReset($email: String!) {\n  requestPasswordReset(email: $email)\n}\n\nmutation ResetPassword($resetToken: String!, $newPassword: String!) {\n  resetPassword(resetToken: $resetToken, newPassword: $newPassword)\n}\n\nmutation CreateRecipe($recipeName: String!, $ingredients: [String]!, $instructions: String!, $prepTime: Int!, $difficulty: Difficulty, $nutritionFacts: String, $tags: [String], $images: [String], $estimatedCost: Float, $authorId: ID) {\n  createRecipe(\n    recipeName: $recipeName\n    ingredients: $ingredients\n    instructions: $instructions\n    prepTime: $prepTime\n    difficulty: $difficulty\n    nutritionFacts: $nutritionFacts\n    tags: $tags\n    images: $images\n    estimatedCost: $estimatedCost\n    authorId: $authorId\n  ) {\n    id\n    recipeName\n    prepTime\n    difficulty\n    author {\n      id\n      name\n    }\n  }\n}\n\nmutation UpdateRecipe($id: ID!, $recipeName: String, $ingredients: [String], $instructions: String, $prepTime: Int, $difficulty: Difficulty, $nutritionFacts: String, $tags: [String], $images: [String], $estimatedCost: Float) {\n  updateRecipe(\n    id: $id\n    recipeName: $recipeName\n    ingredients: $ingredients\n    instructions: $instructions\n    prepTime: $prepTime\n    difficulty: $difficulty\n    nutritionFacts: $nutritionFacts\n    tags: $tags\n    images: $images\n    estimatedCost: $estimatedCost\n  ) {\n    id\n    recipeName\n    prepTime\n    difficulty\n    updatedAt\n  }\n}\n\nmutation DeleteRecipe($id: ID!) {\n  deleteRecipe(id: $id)\n}\n\nmutation CreateRestaurant($restaurantName: String!, $address: String!, $phone: String, $website: String, $cuisineType: [String], $priceRange: PriceRange) {\n  createRestaurant(\n    restaurantName: $restaurantName\n    address: $address\n    phone: $phone\n    website: $website\n    cuisineType: $cuisineType\n    priceRange: $priceRange\n  ) {\n    id\n    restaurantName\n    address\n  }\n}\n\nmutation UpdateRestaurant($id: ID!, $restaurantName: String, $address: String, $phone: String, $website: String, $cuisineType: [String], $priceRange: PriceRange) {\n  updateRestaurant(\n    id: $id\n    restaurantName: $restaurantName\n    address: $address\n    phone: $phone\n    website: $website\n    cuisineType: $cuisineType\n    priceRange: $priceRange\n  ) {\n    id\n    restaurantName\n    address\n    updatedAt\n  }\n}\n\nmutation DeleteRestaurant($id: ID!) {\n  deleteRestaurant(id: $id)\n}\n\nmutation CreateMealPlan($userId: ID!, $startDate: Date!, $endDate: Date!, $title: String, $status: MealPlanStatus, $totalCalories: Int) {\n  createMealPlan(\n    userId: $userId\n    startDate: $startDate\n    endDate: $endDate\n    title: $title\n    status: $status\n    totalCalories: $totalCalories\n  ) {\n    id\n    title\n    startDate\n    endDate\n    user {\n      id\n    }\n  }\n}\n\nmutation UpdateMealPlan($id: ID!, $startDate: Date, $endDate: Date, $title: String, $status: MealPlanStatus, $totalCalories: Int) {\n  updateMealPlan(\n    id: $id\n    startDate: $startDate\n    endDate: $endDate\n    title: $title\n    status: $status\n    totalCalories: $totalCalories\n  ) {\n    id\n    title\n    startDate\n    endDate\n    status\n    updatedAt\n  }\n}\n\nmutation DeleteMealPlan($id: ID!) {\n  deleteMealPlan(id: $id)\n}\n\nmutation CreateMeal($mealPlanId: ID!, $date: Date!, $mealType: MealType!, $recipeId: ID, $restaurantId: ID, $mealName: String, $price: Float, $ingredients: [String], $nutrition: NutritionInput, $allergens: [String], $nutritionFacts: String, $portionSize: String, $notes: String) {\n  createMeal(\n    mealPlanId: $mealPlanId\n    date: $date\n    mealType: $mealType\n    recipeId: $recipeId\n    restaurantId: $restaurantId\n    mealName: $mealName\n    price: $price\n    ingredients: $ingredients\n    nutrition: $nutrition\n    allergens: $allergens\n    nutritionFacts: $nutritionFacts\n    portionSize: $portionSize\n    notes: $notes\n  ) {\n    id\n    mealName\n    mealType\n    date\n    price\n    nutrition {\n      carbohydrates\n      protein\n      fat\n      sodium\n    }\n    allergens\n  }\n}\n\nmutation UpdateMeal($id: ID!, $date: Date, $mealType: MealType, $recipeId: ID, $restaurantId: ID, $mealName: String, $price: Float, $ingredients: [String], $nutrition: NutritionInput, $allergens: [String], $nutritionFacts: String, $portionSize: String, $notes: String) {\n  updateMeal(\n    id: $id\n    date: $date\n    mealType: $mealType\n    recipeId: $recipeId\n    restaurantId: $restaurantId\n    mealName: $mealName\n    price: $price\n    ingredients: $ingredients\n    nutrition: $nutrition\n    allergens: $allergens\n    nutritionFacts: $nutritionFacts\n    portionSize: $portionSize\n    notes: $notes\n  ) {\n    id\n    mealName\n    mealType\n    date\n    price\n    nutrition {\n      carbohydrates\n      protein\n      fat\n      sodium\n    }\n    allergens\n    updatedAt\n  }\n}\n\nmutation DeleteMeal($id: ID!) {\n  deleteMeal(id: $id)\n}\n\nmutation CreateStats($userId: ID!, $macros: String, $micros: String, $caloriesConsumed: Int, $waterIntake: Int, $steps: Int) {\n  createStats(\n    userId: $userId\n    macros: $macros\n    micros: $micros\n    caloriesConsumed: $caloriesConsumed\n    waterIntake: $waterIntake\n    steps: $steps\n  ) {\n    id\n    dateLogged\n    caloriesConsumed\n  }\n}\n\nmutation DeleteStats($id: ID!) {\n  deleteStats(id: $id)\n}\n\nmutation CreateReview($targetType: String!, $targetId: ID!, $rating: Int!, $comment: String) {\n  createReview(\n    targetType: $targetType\n    targetId: $targetId\n    rating: $rating\n    comment: $comment\n  ) {\n    id\n    rating\n    comment\n    targetType\n    targetId\n  }\n}\n\nmutation DeleteReview($id: ID!) {\n  deleteReview(id: $id)\n}\n\nquery GetUser($id: ID!) {\n  getUser(id: $id) {\n    id\n    name\n    email\n    role\n    accountStatus\n    weight\n    height\n    gender\n    measurementSystem\n    dailyCalories\n    createdAt\n  }\n}\n\nquery GetUsers($page: Int, $limit: Int) {\n  getUsers(page: $page, limit: $limit) {\n    id\n    name\n    email\n    role\n  }\n}\n\nquery SearchUsers($keyword: String!) {\n  searchUsers(keyword: $keyword) {\n    id\n    name\n    email\n  }\n}\n\nquery GetRecipe($id: ID!) {\n  getRecipe(id: $id) {\n    id\n    recipeName\n    ingredients\n    instructions\n    prepTime\n    difficulty\n    nutritionFacts\n    tags\n    images\n    estimatedCost\n    averageRating\n    ratingCount\n    author {\n      id\n      name\n    }\n  }\n}\n\nquery GetRecipes($page: Int, $limit: Int) {\n  getRecipes(page: $page, limit: $limit) {\n    id\n    recipeName\n    difficulty\n    averageRating\n    author {\n      id\n      name\n    }\n  }\n}\n\nquery SearchRecipes($keyword: String!) {\n  searchRecipes(keyword: $keyword) {\n    id\n    recipeName\n    difficulty\n  }\n}\n\nquery GetRestaurant($id: ID!) {\n  getRestaurant(id: $id) {\n    id\n    restaurantName\n    address\n    phone\n    website\n    cuisineType\n    priceRange\n    averageRating\n    ratingCount\n  }\n}\n\nquery GetRestaurants($page: Int, $limit: Int) {\n  getRestaurants(page: $page, limit: $limit) {\n    id\n    restaurantName\n    address\n    cuisineType\n    averageRating\n  }\n}\n\nquery SearchRestaurants($keyword: String!) {\n  searchRestaurants(keyword: $keyword) {\n    id\n    restaurantName\n    address\n  }\n}\n\nquery GetMealPlan($id: ID!) {\n  getMealPlan(id: $id) {\n    id\n    title\n    startDate\n    endDate\n    status\n    totalCalories\n    user {\n      id\n      name\n    }\n    meals {\n      id\n      mealName\n      mealType\n      date\n      price\n      nutrition {\n        carbohydrates\n        protein\n        fat\n        sodium\n      }\n      allergens\n    }\n  }\n}\n\nquery GetMealPlans($userId: ID, $page: Int, $limit: Int) {\n  getMealPlans(userId: $userId, page: $page, limit: $limit) {\n    id\n    title\n    startDate\n    endDate\n    status\n    user {\n      id\n    }\n  }\n}\n\nquery GetStatsByUser($userId: ID!) {\n  getStatsByUser(userId: $userId) {\n    id\n    dateLogged\n    macros\n    micros\n    caloriesConsumed\n    waterIntake\n    steps\n  }\n}\n\nquery GetReview($id: ID!) {\n  getReview(id: $id) {\n    id\n    rating\n    comment\n    targetType\n    targetId\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}\n\nquery GetReviewsForTarget($targetType: String!, $targetId: ID!) {\n  getReviewsForTarget(targetType: $targetType, targetId: $targetId) {\n    id\n    rating\n    comment\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}\n\nquery FindNearbyRestaurants($latitude: Float!, $longitude: Float!, $radius: Int, $keyword: String) {\n  findNearbyRestaurants(\n    latitude: $latitude\n    longitude: $longitude\n    radius: $radius\n    keyword: $keyword\n  ) {\n    placeId\n    name\n    vicinity\n    rating\n    userRatingsTotal\n    location {\n      latitude\n      longitude\n    }\n  }\n}\n\nquery Ping {\n  ping\n}\n\nmutation GenerateOptimizedMealPlan {\n  generateOptimizedMealPlan {\n    meals {\n      mealId\n      mealName\n      servings\n      pricePerServing\n      totalPrice\n      nutrition {\n        carbohydrates\n        protein\n        fat\n        sodium\n      }\n    }\n    totalCost\n    totalNutrition {\n      carbohydrates\n      protein\n      fat\n      sodium\n    }\n  }\n}": types.CreateUserDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "mutation CreateUser($input: CreateUserInput!) {\n  createUser(input: $input) {\n    id\n    name\n    email\n    role\n    accountStatus\n  }\n}\n\nmutation UpdateUser($id: ID!, $input: UpdateUserInput!) {\n  updateUser(id: $id, input: $input) {\n    id\n    name\n    email\n    role\n    accountStatus\n    dailyCalories\n    weight\n    height\n  }\n}\n\nmutation DeleteUser($id: ID!) {\n  deleteUser(id: $id)\n}\n\nmutation LoginUser($email: String!, $password: String!) {\n  loginUser(email: $email, password: $password) {\n    token\n    user {\n      id\n      name\n      email\n      role\n    }\n  }\n}\n\nmutation RequestPasswordReset($email: String!) {\n  requestPasswordReset(email: $email)\n}\n\nmutation ResetPassword($resetToken: String!, $newPassword: String!) {\n  resetPassword(resetToken: $resetToken, newPassword: $newPassword)\n}\n\nmutation CreateRecipe($recipeName: String!, $ingredients: [String]!, $instructions: String!, $prepTime: Int!, $difficulty: Difficulty, $nutritionFacts: String, $tags: [String], $images: [String], $estimatedCost: Float, $authorId: ID) {\n  createRecipe(\n    recipeName: $recipeName\n    ingredients: $ingredients\n    instructions: $instructions\n    prepTime: $prepTime\n    difficulty: $difficulty\n    nutritionFacts: $nutritionFacts\n    tags: $tags\n    images: $images\n    estimatedCost: $estimatedCost\n    authorId: $authorId\n  ) {\n    id\n    recipeName\n    prepTime\n    difficulty\n    author {\n      id\n      name\n    }\n  }\n}\n\nmutation UpdateRecipe($id: ID!, $recipeName: String, $ingredients: [String], $instructions: String, $prepTime: Int, $difficulty: Difficulty, $nutritionFacts: String, $tags: [String], $images: [String], $estimatedCost: Float) {\n  updateRecipe(\n    id: $id\n    recipeName: $recipeName\n    ingredients: $ingredients\n    instructions: $instructions\n    prepTime: $prepTime\n    difficulty: $difficulty\n    nutritionFacts: $nutritionFacts\n    tags: $tags\n    images: $images\n    estimatedCost: $estimatedCost\n  ) {\n    id\n    recipeName\n    prepTime\n    difficulty\n    updatedAt\n  }\n}\n\nmutation DeleteRecipe($id: ID!) {\n  deleteRecipe(id: $id)\n}\n\nmutation CreateRestaurant($restaurantName: String!, $address: String!, $phone: String, $website: String, $cuisineType: [String], $priceRange: PriceRange) {\n  createRestaurant(\n    restaurantName: $restaurantName\n    address: $address\n    phone: $phone\n    website: $website\n    cuisineType: $cuisineType\n    priceRange: $priceRange\n  ) {\n    id\n    restaurantName\n    address\n  }\n}\n\nmutation UpdateRestaurant($id: ID!, $restaurantName: String, $address: String, $phone: String, $website: String, $cuisineType: [String], $priceRange: PriceRange) {\n  updateRestaurant(\n    id: $id\n    restaurantName: $restaurantName\n    address: $address\n    phone: $phone\n    website: $website\n    cuisineType: $cuisineType\n    priceRange: $priceRange\n  ) {\n    id\n    restaurantName\n    address\n    updatedAt\n  }\n}\n\nmutation DeleteRestaurant($id: ID!) {\n  deleteRestaurant(id: $id)\n}\n\nmutation CreateMealPlan($userId: ID!, $startDate: Date!, $endDate: Date!, $title: String, $status: MealPlanStatus, $totalCalories: Int) {\n  createMealPlan(\n    userId: $userId\n    startDate: $startDate\n    endDate: $endDate\n    title: $title\n    status: $status\n    totalCalories: $totalCalories\n  ) {\n    id\n    title\n    startDate\n    endDate\n    user {\n      id\n    }\n  }\n}\n\nmutation UpdateMealPlan($id: ID!, $startDate: Date, $endDate: Date, $title: String, $status: MealPlanStatus, $totalCalories: Int) {\n  updateMealPlan(\n    id: $id\n    startDate: $startDate\n    endDate: $endDate\n    title: $title\n    status: $status\n    totalCalories: $totalCalories\n  ) {\n    id\n    title\n    startDate\n    endDate\n    status\n    updatedAt\n  }\n}\n\nmutation DeleteMealPlan($id: ID!) {\n  deleteMealPlan(id: $id)\n}\n\nmutation CreateMeal($mealPlanId: ID!, $date: Date!, $mealType: MealType!, $recipeId: ID, $restaurantId: ID, $mealName: String, $price: Float, $ingredients: [String], $nutrition: NutritionInput, $allergens: [String], $nutritionFacts: String, $portionSize: String, $notes: String) {\n  createMeal(\n    mealPlanId: $mealPlanId\n    date: $date\n    mealType: $mealType\n    recipeId: $recipeId\n    restaurantId: $restaurantId\n    mealName: $mealName\n    price: $price\n    ingredients: $ingredients\n    nutrition: $nutrition\n    allergens: $allergens\n    nutritionFacts: $nutritionFacts\n    portionSize: $portionSize\n    notes: $notes\n  ) {\n    id\n    mealName\n    mealType\n    date\n    price\n    nutrition {\n      carbohydrates\n      protein\n      fat\n      sodium\n    }\n    allergens\n  }\n}\n\nmutation UpdateMeal($id: ID!, $date: Date, $mealType: MealType, $recipeId: ID, $restaurantId: ID, $mealName: String, $price: Float, $ingredients: [String], $nutrition: NutritionInput, $allergens: [String], $nutritionFacts: String, $portionSize: String, $notes: String) {\n  updateMeal(\n    id: $id\n    date: $date\n    mealType: $mealType\n    recipeId: $recipeId\n    restaurantId: $restaurantId\n    mealName: $mealName\n    price: $price\n    ingredients: $ingredients\n    nutrition: $nutrition\n    allergens: $allergens\n    nutritionFacts: $nutritionFacts\n    portionSize: $portionSize\n    notes: $notes\n  ) {\n    id\n    mealName\n    mealType\n    date\n    price\n    nutrition {\n      carbohydrates\n      protein\n      fat\n      sodium\n    }\n    allergens\n    updatedAt\n  }\n}\n\nmutation DeleteMeal($id: ID!) {\n  deleteMeal(id: $id)\n}\n\nmutation CreateStats($userId: ID!, $macros: String, $micros: String, $caloriesConsumed: Int, $waterIntake: Int, $steps: Int) {\n  createStats(\n    userId: $userId\n    macros: $macros\n    micros: $micros\n    caloriesConsumed: $caloriesConsumed\n    waterIntake: $waterIntake\n    steps: $steps\n  ) {\n    id\n    dateLogged\n    caloriesConsumed\n  }\n}\n\nmutation DeleteStats($id: ID!) {\n  deleteStats(id: $id)\n}\n\nmutation CreateReview($targetType: String!, $targetId: ID!, $rating: Int!, $comment: String) {\n  createReview(\n    targetType: $targetType\n    targetId: $targetId\n    rating: $rating\n    comment: $comment\n  ) {\n    id\n    rating\n    comment\n    targetType\n    targetId\n  }\n}\n\nmutation DeleteReview($id: ID!) {\n  deleteReview(id: $id)\n}\n\nquery GetUser($id: ID!) {\n  getUser(id: $id) {\n    id\n    name\n    email\n    role\n    accountStatus\n    weight\n    height\n    gender\n    measurementSystem\n    dailyCalories\n    createdAt\n  }\n}\n\nquery GetUsers($page: Int, $limit: Int) {\n  getUsers(page: $page, limit: $limit) {\n    id\n    name\n    email\n    role\n  }\n}\n\nquery SearchUsers($keyword: String!) {\n  searchUsers(keyword: $keyword) {\n    id\n    name\n    email\n  }\n}\n\nquery GetRecipe($id: ID!) {\n  getRecipe(id: $id) {\n    id\n    recipeName\n    ingredients\n    instructions\n    prepTime\n    difficulty\n    nutritionFacts\n    tags\n    images\n    estimatedCost\n    averageRating\n    ratingCount\n    author {\n      id\n      name\n    }\n  }\n}\n\nquery GetRecipes($page: Int, $limit: Int) {\n  getRecipes(page: $page, limit: $limit) {\n    id\n    recipeName\n    difficulty\n    averageRating\n    author {\n      id\n      name\n    }\n  }\n}\n\nquery SearchRecipes($keyword: String!) {\n  searchRecipes(keyword: $keyword) {\n    id\n    recipeName\n    difficulty\n  }\n}\n\nquery GetRestaurant($id: ID!) {\n  getRestaurant(id: $id) {\n    id\n    restaurantName\n    address\n    phone\n    website\n    cuisineType\n    priceRange\n    averageRating\n    ratingCount\n  }\n}\n\nquery GetRestaurants($page: Int, $limit: Int) {\n  getRestaurants(page: $page, limit: $limit) {\n    id\n    restaurantName\n    address\n    cuisineType\n    averageRating\n  }\n}\n\nquery SearchRestaurants($keyword: String!) {\n  searchRestaurants(keyword: $keyword) {\n    id\n    restaurantName\n    address\n  }\n}\n\nquery GetMealPlan($id: ID!) {\n  getMealPlan(id: $id) {\n    id\n    title\n    startDate\n    endDate\n    status\n    totalCalories\n    user {\n      id\n      name\n    }\n    meals {\n      id\n      mealName\n      mealType\n      date\n      price\n      nutrition {\n        carbohydrates\n        protein\n        fat\n        sodium\n      }\n      allergens\n    }\n  }\n}\n\nquery GetMealPlans($userId: ID, $page: Int, $limit: Int) {\n  getMealPlans(userId: $userId, page: $page, limit: $limit) {\n    id\n    title\n    startDate\n    endDate\n    status\n    user {\n      id\n    }\n  }\n}\n\nquery GetStatsByUser($userId: ID!) {\n  getStatsByUser(userId: $userId) {\n    id\n    dateLogged\n    macros\n    micros\n    caloriesConsumed\n    waterIntake\n    steps\n  }\n}\n\nquery GetReview($id: ID!) {\n  getReview(id: $id) {\n    id\n    rating\n    comment\n    targetType\n    targetId\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}\n\nquery GetReviewsForTarget($targetType: String!, $targetId: ID!) {\n  getReviewsForTarget(targetType: $targetType, targetId: $targetId) {\n    id\n    rating\n    comment\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}\n\nquery FindNearbyRestaurants($latitude: Float!, $longitude: Float!, $radius: Int, $keyword: String) {\n  findNearbyRestaurants(\n    latitude: $latitude\n    longitude: $longitude\n    radius: $radius\n    keyword: $keyword\n  ) {\n    placeId\n    name\n    vicinity\n    rating\n    userRatingsTotal\n    location {\n      latitude\n      longitude\n    }\n  }\n}\n\nquery Ping {\n  ping\n}\n\nmutation GenerateOptimizedMealPlan {\n  generateOptimizedMealPlan {\n    meals {\n      mealId\n      mealName\n      servings\n      pricePerServing\n      totalPrice\n      nutrition {\n        carbohydrates\n        protein\n        fat\n        sodium\n      }\n    }\n    totalCost\n    totalNutrition {\n      carbohydrates\n      protein\n      fat\n      sodium\n    }\n  }\n}"): (typeof documents)["mutation CreateUser($input: CreateUserInput!) {\n  createUser(input: $input) {\n    id\n    name\n    email\n    role\n    accountStatus\n  }\n}\n\nmutation UpdateUser($id: ID!, $input: UpdateUserInput!) {\n  updateUser(id: $id, input: $input) {\n    id\n    name\n    email\n    role\n    accountStatus\n    dailyCalories\n    weight\n    height\n  }\n}\n\nmutation DeleteUser($id: ID!) {\n  deleteUser(id: $id)\n}\n\nmutation LoginUser($email: String!, $password: String!) {\n  loginUser(email: $email, password: $password) {\n    token\n    user {\n      id\n      name\n      email\n      role\n    }\n  }\n}\n\nmutation RequestPasswordReset($email: String!) {\n  requestPasswordReset(email: $email)\n}\n\nmutation ResetPassword($resetToken: String!, $newPassword: String!) {\n  resetPassword(resetToken: $resetToken, newPassword: $newPassword)\n}\n\nmutation CreateRecipe($recipeName: String!, $ingredients: [String]!, $instructions: String!, $prepTime: Int!, $difficulty: Difficulty, $nutritionFacts: String, $tags: [String], $images: [String], $estimatedCost: Float, $authorId: ID) {\n  createRecipe(\n    recipeName: $recipeName\n    ingredients: $ingredients\n    instructions: $instructions\n    prepTime: $prepTime\n    difficulty: $difficulty\n    nutritionFacts: $nutritionFacts\n    tags: $tags\n    images: $images\n    estimatedCost: $estimatedCost\n    authorId: $authorId\n  ) {\n    id\n    recipeName\n    prepTime\n    difficulty\n    author {\n      id\n      name\n    }\n  }\n}\n\nmutation UpdateRecipe($id: ID!, $recipeName: String, $ingredients: [String], $instructions: String, $prepTime: Int, $difficulty: Difficulty, $nutritionFacts: String, $tags: [String], $images: [String], $estimatedCost: Float) {\n  updateRecipe(\n    id: $id\n    recipeName: $recipeName\n    ingredients: $ingredients\n    instructions: $instructions\n    prepTime: $prepTime\n    difficulty: $difficulty\n    nutritionFacts: $nutritionFacts\n    tags: $tags\n    images: $images\n    estimatedCost: $estimatedCost\n  ) {\n    id\n    recipeName\n    prepTime\n    difficulty\n    updatedAt\n  }\n}\n\nmutation DeleteRecipe($id: ID!) {\n  deleteRecipe(id: $id)\n}\n\nmutation CreateRestaurant($restaurantName: String!, $address: String!, $phone: String, $website: String, $cuisineType: [String], $priceRange: PriceRange) {\n  createRestaurant(\n    restaurantName: $restaurantName\n    address: $address\n    phone: $phone\n    website: $website\n    cuisineType: $cuisineType\n    priceRange: $priceRange\n  ) {\n    id\n    restaurantName\n    address\n  }\n}\n\nmutation UpdateRestaurant($id: ID!, $restaurantName: String, $address: String, $phone: String, $website: String, $cuisineType: [String], $priceRange: PriceRange) {\n  updateRestaurant(\n    id: $id\n    restaurantName: $restaurantName\n    address: $address\n    phone: $phone\n    website: $website\n    cuisineType: $cuisineType\n    priceRange: $priceRange\n  ) {\n    id\n    restaurantName\n    address\n    updatedAt\n  }\n}\n\nmutation DeleteRestaurant($id: ID!) {\n  deleteRestaurant(id: $id)\n}\n\nmutation CreateMealPlan($userId: ID!, $startDate: Date!, $endDate: Date!, $title: String, $status: MealPlanStatus, $totalCalories: Int) {\n  createMealPlan(\n    userId: $userId\n    startDate: $startDate\n    endDate: $endDate\n    title: $title\n    status: $status\n    totalCalories: $totalCalories\n  ) {\n    id\n    title\n    startDate\n    endDate\n    user {\n      id\n    }\n  }\n}\n\nmutation UpdateMealPlan($id: ID!, $startDate: Date, $endDate: Date, $title: String, $status: MealPlanStatus, $totalCalories: Int) {\n  updateMealPlan(\n    id: $id\n    startDate: $startDate\n    endDate: $endDate\n    title: $title\n    status: $status\n    totalCalories: $totalCalories\n  ) {\n    id\n    title\n    startDate\n    endDate\n    status\n    updatedAt\n  }\n}\n\nmutation DeleteMealPlan($id: ID!) {\n  deleteMealPlan(id: $id)\n}\n\nmutation CreateMeal($mealPlanId: ID!, $date: Date!, $mealType: MealType!, $recipeId: ID, $restaurantId: ID, $mealName: String, $price: Float, $ingredients: [String], $nutrition: NutritionInput, $allergens: [String], $nutritionFacts: String, $portionSize: String, $notes: String) {\n  createMeal(\n    mealPlanId: $mealPlanId\n    date: $date\n    mealType: $mealType\n    recipeId: $recipeId\n    restaurantId: $restaurantId\n    mealName: $mealName\n    price: $price\n    ingredients: $ingredients\n    nutrition: $nutrition\n    allergens: $allergens\n    nutritionFacts: $nutritionFacts\n    portionSize: $portionSize\n    notes: $notes\n  ) {\n    id\n    mealName\n    mealType\n    date\n    price\n    nutrition {\n      carbohydrates\n      protein\n      fat\n      sodium\n    }\n    allergens\n  }\n}\n\nmutation UpdateMeal($id: ID!, $date: Date, $mealType: MealType, $recipeId: ID, $restaurantId: ID, $mealName: String, $price: Float, $ingredients: [String], $nutrition: NutritionInput, $allergens: [String], $nutritionFacts: String, $portionSize: String, $notes: String) {\n  updateMeal(\n    id: $id\n    date: $date\n    mealType: $mealType\n    recipeId: $recipeId\n    restaurantId: $restaurantId\n    mealName: $mealName\n    price: $price\n    ingredients: $ingredients\n    nutrition: $nutrition\n    allergens: $allergens\n    nutritionFacts: $nutritionFacts\n    portionSize: $portionSize\n    notes: $notes\n  ) {\n    id\n    mealName\n    mealType\n    date\n    price\n    nutrition {\n      carbohydrates\n      protein\n      fat\n      sodium\n    }\n    allergens\n    updatedAt\n  }\n}\n\nmutation DeleteMeal($id: ID!) {\n  deleteMeal(id: $id)\n}\n\nmutation CreateStats($userId: ID!, $macros: String, $micros: String, $caloriesConsumed: Int, $waterIntake: Int, $steps: Int) {\n  createStats(\n    userId: $userId\n    macros: $macros\n    micros: $micros\n    caloriesConsumed: $caloriesConsumed\n    waterIntake: $waterIntake\n    steps: $steps\n  ) {\n    id\n    dateLogged\n    caloriesConsumed\n  }\n}\n\nmutation DeleteStats($id: ID!) {\n  deleteStats(id: $id)\n}\n\nmutation CreateReview($targetType: String!, $targetId: ID!, $rating: Int!, $comment: String) {\n  createReview(\n    targetType: $targetType\n    targetId: $targetId\n    rating: $rating\n    comment: $comment\n  ) {\n    id\n    rating\n    comment\n    targetType\n    targetId\n  }\n}\n\nmutation DeleteReview($id: ID!) {\n  deleteReview(id: $id)\n}\n\nquery GetUser($id: ID!) {\n  getUser(id: $id) {\n    id\n    name\n    email\n    role\n    accountStatus\n    weight\n    height\n    gender\n    measurementSystem\n    dailyCalories\n    createdAt\n  }\n}\n\nquery GetUsers($page: Int, $limit: Int) {\n  getUsers(page: $page, limit: $limit) {\n    id\n    name\n    email\n    role\n  }\n}\n\nquery SearchUsers($keyword: String!) {\n  searchUsers(keyword: $keyword) {\n    id\n    name\n    email\n  }\n}\n\nquery GetRecipe($id: ID!) {\n  getRecipe(id: $id) {\n    id\n    recipeName\n    ingredients\n    instructions\n    prepTime\n    difficulty\n    nutritionFacts\n    tags\n    images\n    estimatedCost\n    averageRating\n    ratingCount\n    author {\n      id\n      name\n    }\n  }\n}\n\nquery GetRecipes($page: Int, $limit: Int) {\n  getRecipes(page: $page, limit: $limit) {\n    id\n    recipeName\n    difficulty\n    averageRating\n    author {\n      id\n      name\n    }\n  }\n}\n\nquery SearchRecipes($keyword: String!) {\n  searchRecipes(keyword: $keyword) {\n    id\n    recipeName\n    difficulty\n  }\n}\n\nquery GetRestaurant($id: ID!) {\n  getRestaurant(id: $id) {\n    id\n    restaurantName\n    address\n    phone\n    website\n    cuisineType\n    priceRange\n    averageRating\n    ratingCount\n  }\n}\n\nquery GetRestaurants($page: Int, $limit: Int) {\n  getRestaurants(page: $page, limit: $limit) {\n    id\n    restaurantName\n    address\n    cuisineType\n    averageRating\n  }\n}\n\nquery SearchRestaurants($keyword: String!) {\n  searchRestaurants(keyword: $keyword) {\n    id\n    restaurantName\n    address\n  }\n}\n\nquery GetMealPlan($id: ID!) {\n  getMealPlan(id: $id) {\n    id\n    title\n    startDate\n    endDate\n    status\n    totalCalories\n    user {\n      id\n      name\n    }\n    meals {\n      id\n      mealName\n      mealType\n      date\n      price\n      nutrition {\n        carbohydrates\n        protein\n        fat\n        sodium\n      }\n      allergens\n    }\n  }\n}\n\nquery GetMealPlans($userId: ID, $page: Int, $limit: Int) {\n  getMealPlans(userId: $userId, page: $page, limit: $limit) {\n    id\n    title\n    startDate\n    endDate\n    status\n    user {\n      id\n    }\n  }\n}\n\nquery GetStatsByUser($userId: ID!) {\n  getStatsByUser(userId: $userId) {\n    id\n    dateLogged\n    macros\n    micros\n    caloriesConsumed\n    waterIntake\n    steps\n  }\n}\n\nquery GetReview($id: ID!) {\n  getReview(id: $id) {\n    id\n    rating\n    comment\n    targetType\n    targetId\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}\n\nquery GetReviewsForTarget($targetType: String!, $targetId: ID!) {\n  getReviewsForTarget(targetType: $targetType, targetId: $targetId) {\n    id\n    rating\n    comment\n    user {\n      id\n      name\n    }\n    createdAt\n  }\n}\n\nquery FindNearbyRestaurants($latitude: Float!, $longitude: Float!, $radius: Int, $keyword: String) {\n  findNearbyRestaurants(\n    latitude: $latitude\n    longitude: $longitude\n    radius: $radius\n    keyword: $keyword\n  ) {\n    placeId\n    name\n    vicinity\n    rating\n    userRatingsTotal\n    location {\n      latitude\n      longitude\n    }\n  }\n}\n\nquery Ping {\n  ping\n}\n\nmutation GenerateOptimizedMealPlan {\n  generateOptimizedMealPlan {\n    meals {\n      mealId\n      mealName\n      servings\n      pricePerServing\n      totalPrice\n      nutrition {\n        carbohydrates\n        protein\n        fat\n        sodium\n      }\n    }\n    totalCost\n    totalNutrition {\n      carbohydrates\n      protein\n      fat\n      sodium\n    }\n  }\n}"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;