export default async function imageCompression(file, opts = {}) {
  const max = opts.maxWidthOrHeight || 256;
  const img = await new Promise((resolve) => {
    const i = new Image();
    i.onload = () => resolve(i);
    i.src = URL.createObjectURL(file);
  });
  const canvas = document.createElement('canvas');
  canvas.width = max;
  canvas.height = max;
  const ctx = canvas.getContext('2d');
  const side = Math.min(img.width, img.height);
  ctx.drawImage(img, (img.width - side)/2, (img.height - side)/2, side, side, 0, 0, max, max);
  const blob = await new Promise((resolve) => canvas.toBlob(resolve, file.type));
  return new File([blob], file.name, { type: file.type });
}
